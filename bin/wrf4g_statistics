#!/usr/bin/env python


from wrf4g_env import *
import wrf4g.wrf4lib


def long_header():
    linea="realization;chunk_id;gwid;exit_code;resource;wn;"
    lestados=wrf4g.wrf4lib.JobStatus()
    es=lestados.keys()
    es.sort()
    for st in es:
        linea+=lestados[st] + ";"
    print linea
    

usage="""

%prog [--{exp Experiment|rea Realization}] [--output file]

Synopsys:

Prints the experiment or realization status. 
"""  
parser = OptionParser(usage,version="%prog 1.0")
parser.add_option("-e", "--exp",metavar="name",dest="exp_name", help="Name of the experiment.")
parser.add_option("-r", "--rea",metavar="name",dest="rea_name", help="Name of the realization")

(options, args) = parser.parse_args()

try:
    if options.exp_name:
        experiment_name=options.exp_name
        exp=wrf4g.wrf4lib.Experiment(data={'name':'%s'%experiment_name})
        exp.data['id']=exp.get_id_from_name()
        if exp.data['id']<0:
            print "Experiment %s do not exists\n" % experiment_name
            sys.exit(1)
        long_header()
        exp.statistics()
    elif options.rea_name:
        realization_name=options.rea_name
        rea=wrf4g.wrf4lib.Realization(data={'name':'%s'%realization_name})
        long_header()
        rea.statistics()        
    else:
        print "Experiment or realization name have to be provided"
        
except Exception, e:
    print 'Caught exception: %s: %s' % (e.__class__, str(e))
    exit(-1)
    
finally:
    wrf4g.wrf4lib.dbc.close()

#ecdx044_rf1v__1986061612_1986061800,cdxeur01



#job=wrf4g.wrf4lib.Job(data={'id':108725})
#a=job.list_events()
#for i in a:
#    print "%s \t\t %s"%(i['status'],i['tiempo'])
    

 