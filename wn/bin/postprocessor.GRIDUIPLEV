#! /bin/bash
#
# Sample postprocessor
#
# This can be any kind of executable accepting one argument:
#
wrfnc_file=$1        # The WRF file to postprocess
#
# and creating a postprocessed file with the same name to be uploaded by register_file
#
if ! which p_interp; then
  thisdir=$(pwd)
  cd `cat ../../rootdir`
    if test -e /software/ScientificLinux/4.6/etc/bashrc; then
      cp /gpfs/csic_projects/meteo/WORK/GRIDUI/Apps/p_interp.tar.gz .
      cp /gpfs/csic_projects/meteo/WORK/GRIDUI/Apps/nco.tar.gz .
    else
      vcp gsiftp://ce01.macc.unican.es:2812/oceano/gmeteo/WORK/MDM.UC/Apps/p_interp.tar.gz .
      vcp gsiftp://ce01.macc.unican.es:2812/oceano/gmeteo/WORK/MDM.UC/Apps/nco.tar.gz .
    fi
    tar xzf p_interp.tar.gz && rm p_interp.tar.gz
    tar xzf nco.tar.gz && rm nco.tar.gz
  cd ${thisdir}
fi

function pintnml(){
  idir=$1
  ifile=$2
  cat << EOF > namelist.pinterp
&io
  path_to_input            = '${idir}/',
  input_name               = '${ifile}',
  path_to_output           = '${idir}/',
  fields                   = 'Q2,T2,GHT,TT,RH,MSLP,PSFC,U10,V10,RAINTOT,Times',
  process                  = 'list',
  debug                    = .FALSE.,
  grid_filt                = 3,
  ntimes_filt              = 10,
/

&interp_in
  interp_levels            = 1000.0, 850.0, 500.0, 200.0,
  extrapolate              = 1,
  interp_method            = 1,
/
EOF
}

pintnml . ${wrfnc_file}
p_interp
rm namelist.pinterp

xptdsize=$( echo "print int($(stat -c %s ${wrfnc_file})*0.06)" | python )
if test "$(stat -c %s ${wrfnc_file}_PLEV)" -ge ${xptdsize}; then
  mv "${wrfnc_file}_PLEV" "${wrfnc_file}" 
fi
