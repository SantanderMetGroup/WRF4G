#!/bin/bash

extract_date () {
# Function to give date in any format and give any output
  date=$1
  kind=$2
  output=$3
  case ${kind} in
  'dTh')
##  [YYYY][MM][DD]T[HH][MI][SS]
    year=`expr substr ${date} 1 4`
    month=`expr substr ${date} 5 2`
    day=`expr substr ${date} 7 2`
    hour=`expr substr ${date} 10 2`
    minute=`expr substr ${date} 12 2`
    second=`expr substr ${date} 14 2`
  ;;
  'dh')
##  [YYYY][MM][DD][HH][MI][SS]
    year=`expr substr ${date} 1 4`
    month=`expr substr ${date} 5 2`
    day=`expr substr ${date} 7 2`
    hour=`expr substr ${date} 9 2`
    minute=`expr substr ${date} 11 2`
    second=`expr substr ${date} 13 2`
  esac

  case ${output} in
  'c')
  echo ${year}${month}${day}${hour}${minute}${second}  
  ;;
  's')
  echo ${year}" "${month}" "${day}" "${hour}" "${minute}" "${second}
  ;;
  'i')
  echo ${year}"-"${month}"-"${day}"T"${hour}":"${minute}":"${second}
  ;;
  'i2')
  echo ${year}"-"${month}"-"${day}" "${hour}":"${minute}
  ;;
  esac
}

#######    #######    #######    #######    #######    #######    #######    #######    ####### 
    #######    #######    #######    #######    #######    #######    #######    ####### 
if test $1 = '-h'
then
echo "*********************************"
echo "*** Preprocessor to transform ***"
echo "***  netCDF from CNRM to GRIB ***"
echo "*********************************"
echo "preprocessor.CNRM 'sDATE'([AAAA][MM][DD]T[HH][MI][SS]) 'eDATE'([AAAA][MM][DD]T[HH][MI][SS]) 'PREfix'(prefix of files) 'FILEadd'(GRIB with adding variables)"
#Preprocessor to transform netCDF from CNRM to GRIB
# arg1: Starting date; [AAAA][MM][DD]T[HH][MI][SS]
# arg2: Ending date; [AAAA][MM][DD]T[HH][MI][SS]
# arg3: Prefix of files
# arg4: File with adding variables
else
rootsh=`pwd`

datadir="/oceano/gmeteo/DATA/CNRM/CNRM-CM3/20C3M"
datastdir="/oceano/gmeteo/DATA/CNRM/CNRM-CM3/static"
outdir=${rootsh}'/grbData'

mkdir -p grbData

thisdir=$(pwd)
cd `cat ../rootdir`
  if test -e /software/ScientificLinux/4.6/etc/bashrc; then
    cp /oceano/gmeteo/WORK/MDM.UC/Apps/cdo.tar.gz .
  else
    vcp gsiftp://ce01.macc.unican.es:2812/oceano/gmeteo/WORK/MDM.UC/Apps/cdo.tar.gz .
  fi
  tar xzf cdo.tar.gz && rm cdo.tar.gz
cd ${thisdir}

sdate=$1
edate=$2
datadir=$3
fakesoilgrb=FAKESOIL.grb 

sdate=`extract_date $1 dTh i`
edate=`extract_date $2 dTh i`

yeari=`extract_date $1 dTh s | awk '{print $1}'`
field=1
rm -f ${rootsh}/tmp0.grb

function get_fake_soil(){
  infile=$1
  outfile=grbData/`basename ${infile/mm5/soil.grb}`
  ndates=$(cdo ntime ${infile})
  cdo remapbil,${infile} ${fakesoilgrb} ${fakesoilgrb}.echam
  cdo -t echam_grib.table -f grb setpartab,echam_grib.table ${fakesoilgrb}.echam tmp.grb # este comando hace algo realmente???
  cdo sinfov tmp.grb
  idate=1
  rm -f tmp2.grb
  while test "${idate}" -le "${ndates}"
  do
    cdo -s cat tmp.grb tmp2.grb
    let idate++
  done 
  read date_s time_s <<< $(echo ${sformateddate} | tr '_' ' ')
  cdo settaxis,${date_s},${time_s},6hours tmp2.grb ${outfile}
  rm tmp*.grb
  rm ls*.grb
  rm ${fakesoilgrb}.echam
}

cat > awkcmd << eof
BEGIN {
  FS="|"
}
function ltrim(s) { sub(/^[ \t]+/, "", s); return s }
function rtrim(s) { sub(/[ \t]+$/, "", s); return s }
function trim(s)  { return rtrim(ltrim(s)); }
{
  printf "%s;%s;%s;%s;%s;%s;%s;%s\n",
  trim(\$1),trim(\$2),trim(\$3),trim(\$4),trim(\$5),trim(\$6),trim(\$8),trim(\$7)
}
eof

#
#   Parse the Vtable
#
outfile="grbData/CNRM.grb"
rm -f ${outfile}
cat wrf4g_files/WPS/ungrib/Variable_Tables/Vtable.CNRM \
  | sed -e '/^Code/d' -e '/^GRIB/d' -e '/^-----+/d' \
  | awk -f awkcmd \
  | while IFS=";" read gribcode leveltype gribl1 gribl2 ungribname units ncvar description
  do
    if test -n ${ncvar}; then
      # There is a netcdf file with the data for this variable
      file=$(ls ${datadir}/*6h_${ncvar}.${yeari}.nc)
      test -n ${file} || file=$(ls ${datastdir}/${ncvar}_A1.nc) # Try to find it as a static field
      cdo -f grb setcode,${gribcode} -setltype,${leveltype} -seldate,${sdate},${edate} ${file} tmp.grb
      cat tmp.grb >> ${outfile}
    else
    fi
  done

rm -f awkcmd
