#! /bin/bash

#
#  Load experiment.wrf4g and conf files
#
ROOTDIR=$(cat ../../rootdir)
export PATH=$ROOTDIR/bin:$PATH
export LD_LIBRARY_PATH=$ROOTDIR/lib:$LD_LIBRARY_PATH
source ${ROOTDIR}/lib/bash/wrf_util.sh
source ${ROOTDIR}/lib/bash/wrf4g_exit_codes.sh
source ${ROOTDIR}/resources.wrf4g                             || exit ${ERROR_MISSING_WRF4GCNF}
export WRF4G_APPS
sed -e 's/\ *=\ */=/' ${ROOTDIR}/experiment.wrf4g > source.it || exit ${ERROR_MISSING_WRFINPUT}
source source.it && rm source.it

logfile="../../log/wrfgel.out"

function kill_wrf(){
  kill -9 $(cat wrf.pid)
  exit ${EXIT_REGISTER_FAILED}
}

function do_all(){
  test "${1:0:2}" = "ts" && exit 0
  #
  #  If there are time series files, pack them and upload them (if this is a restart time)
  #
  if test "$1" = "rst"; then
    if test -f tslist; then
      ofile="wrfts_$(date_wrf2iso ${chunk_restart_date}).tar.gz"
      cd T/
        tar czf ../${ofile} *.TS
      cd ..
      chmod g+rw ${ofile}
      register_file -v ts $2 ${ofile} >> ${logfile} 2>&1
    fi
  fi
  #
  #  If there is a postprocessor defined, use it to postprocess the file before registering
  #
  if test -n "${postprocessor}"; then
    if test "${3:0:6}" = "wrfout"; then
      #
      # Do not post process wrfrain, wrfxtrm, ...
      #
      if (ncdump -h ${3} | grep WRF4G_postprocessor) ; then
        #
        # Do not postprocess if already postprocessed
        #
        echo "$3 was already postprocessed"
      else
        postprocessor.${postprocessor} $3 >> ${logfile} 2>&1
	if ! which ncatted; then
	  thisdir=$(pwd)
	  cd $(cat ../../rootdir)
	  vcp ${WRF4G_APPS}/nco.tar.gz .
	  tar xzf nco.tar.gz && rm nco.tar.gz
	  cd ${thisdir}
	fi
        ncatted -O -a WRF4G_postprocessor,global,o,c,"${postprocessor}" $3
      fi
    fi
  fi
  #
  #  Now, register the file in the background. If something fails, kill the whole thing
  #
  if test -n "$3"; then 
    chmod g+rw $3
  fi
  register_file $* >> ${logfile} 2>&1
}

if test "$1" = "--no-bg"; then
  # TODO: Improve the (non-existent) option parser...
  shift
  do_all $*
else
  do_all $* &
fi
pid=$(echo $!)
echo $pid >> register.pids
# wait $pid || kill_wrf 
