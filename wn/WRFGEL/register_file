#!/usr/bin/python
from vcp import *      
from commands import getstatusoutput
from optparse import OptionParser
from sys import exit   
from sys import stderr  
from os.path import basename


WRF4G_CONF_FILE_NOT_DEFINED=1
DATE_BAD_FORMED=2
TOO_MANY_DATES=3

usage="""%prog file_type date [file_name]

Example: %prog rst 1990-01-01_00:00:00 wrfrst_d01_1990-01-01_00:00:00
         %prog out 1990-01-01_00:00:00 wpsout_d01_1990-01-01_00:00:00
         %prog wps 1990-01-01_00:00:00

This command needs that the following environment variables have been established: WRF4G_EXPERIMENT, WRF4G_REALIZATION and WRF4G_CONF_FILE.
"""
# Check the Arguments
parser = OptionParser(usage,version="%prog 1.0")
parser.add_option("-v", "--verbose",action="store_true", dest="verbose", default=False,help="Verbose mode. Explain what is being done")
(options, args) = parser.parse_args()
verbose=options.verbose


type_list = {
  "rst" : "restart",
  "out" : "output",
}

if len(args) == 3 and args[0] in type_list.keys():
  [type,date,file] = args
elif len(args) == 2 and args[0] == "wps":
  [type,date] = args
else:
  parser.error("Incorrect number of arguments")
  exit(1)


stderr.write("WRFGEL> START: %s\n" % args)


# Check that the environment variables has been established and import their values
env_var={"WRF4G_EXPERIMENT": "" , "WRF4G_REALIZATION": "","WRF4G_CONF_FILE": ""}
env_var=get_env_vars(env_var)
exec(open(env_var["WRF4G_CONF_FILE"]).read())
# List all the variables in the script and search WRF4G_BASEPATH
if not 'WRF4G_BASEPATH' in dir():
  stderr.write("Error: WRF4G_BASEPATH is not defined\n")
  exit(1)

# Change the name of the file in the repository (Change date to the iso format
# and add .nc at the end of the name
if type in type_list.keys() :
    file_o=wrffile(file)
    dest_file=file_o.file_name_iso()
    
    dest_folder="%s/experiments/%s/%s/%s" % (WRF4G_BASEPATH,env_var["WRF4G_EXPERIMENT"],env_var["WRF4G_REALIZATION"],type_list[type])
    dest= dest_folder + "/" + dest_file
    
    #In the case of restart move the previous restart file to the .bak and the delete the old one  
    """if type =="rst" : 
       
        dest_bak=VCPURL(dest_folder)
        back_list=dest_bak.ls("*")
        if len(back_list) != 2 : 
            stderr.write("Error: There are more than one back file")
            exit(4)
        else: 
            # Rename all the files to *.bak
            for old_file in back_list:
                if verbose: stderr.write("Moving : %s to %s" % (file,dest))
                VCPURL(dest_folder + "/"+  old_file).mv(old_file + ".bak")
                if old_file.find(".bak") != -1 : file2del=dest_folder + "/"+ old_file + ".bak"
            
            #Upload the new file 
            if verbose: stderr.write("origin: %s destiny: %s" % (file,dest)) 
            output=copy_file(file,dest)
            stderr.write(output)
            
            if verbose: stderr.write("Deleting from local disk: %s" % file )
            # Delete the old .bak file
            VCPURL(file2del).rm()
    """
    output=copy_file(file,dest +".part")
    if output: print output
    VCPURL(dest + ".part").rename(basename(dest))
    input=VCPURL(file)
    # Delete the file from local disk 
    input.rm()

else :    
    # If the files are WPS, add the date to the name. Three files have to be uploaded: wrfinput_d0?,wrfbdy_d0? and wrflowinp_d0?
    #The command: $ upload_file wps     1990-01-01_00:00:00
    # will create in the repositore three files with the following format: wrfinput_d01_19900101T000000
    wps_dir=VCPURL(".")
    wps_files=wps_dir.ls("wrf[lbi]*_d\d\d")    

    suffix="_" + datetime2dateiso(datewrf2datetime(date))+ ".nc"

    for wps_file in wps_files :
        dest_file=basename(wps_file)
        dest="%s/experiments/%s/%s/%s/%s%s" % (WRF4G_BASEPATH,env_var["WRF4G_EXPERIMENT"],env_var["WRF4G_REALIZATION"],"wpsout",dest_file,suffix)
        if verbose:
             stderr.write("origin: %s destiny: %s\n" % (wps_file,dest))
        output=copy_file(wps_file,dest, verbose=verbose) 
        if output: print output

stderr.write("WRFGEL> END: %s\n" % args)
