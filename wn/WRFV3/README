WRF Model Version 3.1 (April 9, 2009)
http://www.mmm.ucar.edu/wrf/users/

------------------------
WRF PUBLIC DOMAIN NOTICE
------------------------

WRF was developed at the National Center for Atmospheric Research
(NCAR) which is operated by the University Corporation for
Atmospheric Research (UCAR). NCAR and UCAR make no proprietary
claims, either statutory or otherwise, to this version and
release of WRF and consider WRF to be in the public domain for
use by any person or entity for any purpose without any fee or
charge. UCAR requests that any WRF user include this notice on
any partial or full copies of WRF. WRF is provided on an "AS
IS" basis and any warranties, either express or implied,
including but not limited to implied warranties of
non-infringement, originality, merchantability and fitness for a
particular purpose, are disclaimed. In no event shall
UCAR be liable for any damages, whatsoever, whether direct,
indirect, consequential or special, that arise out of or in
connection with the access, use or performance of WRF, including
infringement actions.


======================================
This is the main directory for the WRF Version 3 source code release.
======================================

V3.1 Release Notes:
-------------------

Version 3.1 is released on April 9, 2009.

- For more information on WRF V3.1 release, visit WRF Users home page
  http://www.mmm.ucar.edu/wrf/users/, and read the online User's Guide.
- WRF V3 executable will work with V3.0 wrfinput/wrfbdy (but requires 
  inserting a new namelist variable use_baseparam_fr_nml in &dynamics). As
  always, rerunning the new programs is recommended.
- WRF V3.1 has changed a number of namelists. For example, ucmcall has
  become sf_urban_physics, pd_moist(scalar/tke/chem) has become 
  moist_adv_opt (scalar/tke/chem_adv_opt). Helpful messages will be printed
  to aid you.


V3.0.1.1 Release Notes:
-----------------------

Version 3.0.1.1 has only limited bug fixes compared to version 3.0.1.
The detailed updates for WRF-ARW can be found at
http://www.mmm.ucar.edu/wrf/users/wrfv3/updates-3.0.1.1.html.


V3.0.1 Release Notes:
---------------------

This is a bug fix release. The detailed updates for WRF-ARW can be found at
http://www.mmm.ucar.edu/wrf/users/wrfv3/updates-3.0.1.html.

Online User's Guides have also been updated.

======================================

V3.0 Release Notes:
------------------

- For directions on compiling WRF, see below or Users Web page.
- For more information on WRF V3 release, visit WRF Users home page
  http://www.mmm.ucar.edu/wrf/users/
- WRF V3 works with WPS, and SI is no longer supported. 
  Please see User' Guide for WPS.
- WRF V3 executable does not work with wrfinput/wrfbdy produced by previous versions.
- WRF V3 has removed one obsolete namelist variable, dyn_opt. Edit with caution.

======================================

WRF update history:

- V2.0.1: May 21, 2004
- V2.0.2: June 3, 2004
- V2.0.3: Nov 12, 2004 
  V2.0.3.1: Dec 3, 2004
- V2.1: August 4, 2005
- V2.1.1: Nov 8, 2005
- V2.1.2: Jan 27, 2006
- V2.2: Dec 21, 2006
- V2.2.1: Nov 1, 2007
- V3.0: April 4, 2008
- V3.0.1: August 5, 2008
- V3.0.1.1: August 22, 2008

======================================

How to compile and run?
-----------------------

- In WRFV3 directory, type 'configure' - this will create a configure.wrf
  file that has appropriate compile options for the supported computers.

  Note: WRF requires netCDF library. If your netCDF library is installed in
        some odd directory, set environment variable NETCDF before you type
        'configure'. For example, 

        setenv NETCDF /usr/local/netcdf-pgi

- Type 'compile case_name' where you can find the case_names by simply typing
  compile. The following are available:

      compile em_b_wave
      compile em_grav2d_x
      compile em_heldsuarez
      compile em_hill2d_x
      compile em_les
      compile em_quarter_ss
      compile em_real
      compile em_seabreeze2d_x
      compile em_squall2d_x
      compile em_squall2d_y
      compile em_scm_xy

- If sucessful, this will create either real.exe or ideal.exe and wrf.exe
  in directory main/, and the appropriate executables will be linked into
  the test directoires under test/case_name, or run/.

- cd to the appropriate test or run directory to run ideal/real/wrf.

- If it is one of the idealized cases (b_wave, hill2d_x, grav2d_x, quarter_ss,
  squall2d_x, squall2d_y, em_les or em_heldsuarez), cd the the appropriate directory, type

  ./ideal.exe 

  to produce wrfinput_d01 file for wrf model. Then type

  ./wrf.exe 

  to run. 

- If it is real-data case (real), place files from WPS (met_em.*)
  in the appropriate directory, type

  ./real.exe

  to produce wrfbdy_d01 and wrfinput_d01. Then type

  ./wrf.exe

  to run.

- If you use mpich, type

  mpirun -np number-of-processors wrf.exe

- For information on how to make nested runs, visit
  http://www.mmm.ucar.edu/wrf/users/


======================================

What is in WRF V3?

- Advanced Research WRF (ARW) solver: Eulerian mass, hydrostatic and non-hydrostatic
  * Arakawa C-grid staggering
  * Runge-Kutta 2nd and 3rd order timestep options
  * scalar-conserving flux form for prognostic variables
  * 2nd to 6th order advection options (horizontal and vertical)
  * time-split small step for acoustic modes
  * small step horizontally explicit, vertically implicit
  * divergence damping option and vertical time off-centering
  * external-mode filtering option for mass model
  * hydrostatic option via namelist option
  * positive-definite and monotonic advection for moisture, scalar, tke and chemical tracers
  * global modeling capability on latitude-longitude grid

- Two-way nesting:
  * multiple domains and multiple nest levels
  * supports integer nest grid ratio
  * feedback option for both odd and even nest grid ratios 
  * smoothing options

- One-way nesting 

- Moving nest 
  * Specified move
  * Automatic move using a mid-level vortex-following algorithm

- Physics options:
  * microphysics (Kessler/ WRF Single Moment 3, 5 and 6 classes / Lin et al./
    Eta Ferrier / Thompson / Goddard / 2-moment Morrison / WRF Double Mement 5 and 6 classes )
  * cumulus parameterization (Kain-Fritsch with shallow convection / 
    Betts-Miller-Janjic / Grell-Devenyi ensemble / New Grell )
  * planetary boundary layer (Yosei University / Mellor-Yamada-Janjic / ACM2 / QNSE / MYNN / BouLac )
  * surface layer (similarity theory MM5 / Eta / QNSE / MYNN )
  * slab soil model (5-layer thermal diffusion / Noah land-surface model (4 levels) /
    RUC LSM (6 levels) / Pleim-Xu (2 levels)
  * Urban canopy model and BEP multi-layer (works with Noah LSM, BEP also requires MYJ or BouLac)
  * longwave radiation (RRTM / CAM / RRTMG)
  * shortwave radiation (simple MM5 scheme / Goddard / CAM / RRTMG )
  * sub-grid turbulence (constant K diffusion/ 2-D Smagorinsky/ predicted TKE /
    2-D, 6th order diffusion)
  * Rayleigh damping for w at the upper boundary layer
  * gravity wave drag
  * land-use categories determine surface properties; support for 24 category USGS and 
    20 category MODIS (Noah LSM only in V3.1)
  * Options for modifying SST, sea ice, vegetation fraction, albedo, and deep soil temp
    for long simulations
  * fractional sea ice option for polar regions; modified snow/ice physics

- Nudging:
  * three-dimensional and surface analysis nudging 
  * observation nudging 
  * spectral nudging

- Software

  * Hierarchical software architecture that insulates scientific code
    (Model Layer) from computer architecture (Driver Layer)
  * Multi-level parallelism supporting shared-memory (OpenMP), distributed-memory (MPI), 
    and hybrid share/distributed modes of execution
  * Active data registry: defines and manages model state fields, I/O,
    nesting, configuration, and numerous other aspects of WRF through a single file, 
    called the Registry
  * Two-way nesting:
      Easy to extend: forcing and feedback of new fields specified by
        editing a single table in the Registry
      Efficient: 5-8% overhead on 64 processes of IBM
      Moving nests.
  * Enhanced I/O options:
      NetCDF and Parallel HDF5 formats
      Nine auxiliary input and history output streams separately controllable through the namelist
      Special input streams for analysis and observation nudging
      Output file names and time-stamps specifiable through namelist
      Special output stream for 3DVAR
  * Efficient execution on a range of computing platforms:
      IBM SP systems, (e.g. NCAR "bluevista","blueice","bluefire" Power5-based system)
      IBM Blue Gene
      SGI Origin and Altix
      Linux/Intel
         IA64 MPP (HP Superdome, SGI Altix, NCSA Teragrid systems)
         IA64 SMP
         x86_64 (e.g. TACC's "Ranger", NOAA/GSD "wJet" )
	 PGI, Intel, Pathscale, gfortran, g95 compilers supported
      Sun Solaris (single threaded and SMP)
      Cray X1, X1e (vector), XT3/4 (Opteron)
      Mac Intel/ppc, PGI/ifort/g95
      NEC SX/8
      HP-UX
      Fujitsu VPP 5000
  * RSL_LITE: communication layer, scalable to very large domains, supports nesting.
  * I/O: NetCDF, parallel NetCDF (Argonne), HDF5, GRIB, raw binary, Quilting (asynchronous I/O), MCEL (coupling)
  * ESMF Time Management, including exact arithmetic for fractional
    time steps (no drift).
  * ESMF integration - WRF can be run as an ESMF component.
  * Improved documentation, both on-line (web based browsing tools) and in-line

