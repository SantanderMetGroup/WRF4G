#! /bin/bash
#
# Job submission abstraction layer
#
# These files (wrf4g_submit.*) are called with a 'jobfile' argument and an
# optional job identification to set up dependencies.  The only standard output
# should be a job identification for the job submitted (for its use on a
# subsequent call to this script)
#
jobfile=$1
depid=$2

source wrf4g.conf

if test -n "${depid}"; then
  depflag="-hold_jid ${depid}"
else
  depflag=""
fi

slots=`expr ${NUMBER_OF_NODES} '*' ${PROCESSES_PER_NODE}`

mpiexec="mpiexec -npernode "${PROCESSES_PER_NODE}

if test "${NUMBER_OF_NODES}" -gt 1 -o "${PROCESSES_PER_NODE}" -gt 1; then
  nodflag="-pe mpi ${slots}"
  echo "LAUNCHER_METGRID=\"\""                 >> wrf.chunk
  echo "LAUNCHER_REAL=\"\""                    >> wrf.chunk
  echo "LAUNCHER_WRF=\"$mpiexec -np ${PROCESSES_PER_NODE} -machinefile wrf_gms \"" >> wrf.chunk
  echo "export P4_GLOBMEMSIZE=67108864" >> wrf.chunk
else
  nodflag=""
  echo "LAUNCHER_METGRID=\"\""              >> wrf.chunk
  echo "LAUNCHER_REAL=\"\""              >> wrf.chunk
  echo "LAUNCHER_WRF=\"\""               >> wrf.chunk
fi
rootbuild=`pwd`
walltimeflag="-l h_rt=10"
eoflag="-e $PWD/error -o $PWD/output -l virtual_free=3.6G" 
#eoflag="-l mem_free=4G" 
rundir=${WRF4G_RUN_SHARED}/${WRF4G_EXPERIMENT}/${WRF4G_REALIZATION}/${WRF4G_CHUNK}
#
#   Avoid overwriting previous run directories. Move it to an unused name.
#
dircount=1
oldrundir="${rundir}.${dircount}"
while test -d ${oldrundir}; do
  let dircount++
  oldrundir="$(echo $oldrundir | sed -e 's/\.[0-9]*$//').${dircount}"
done
test -d ${rundir} && mv ${rundir} ${oldrundir}
#
#  Enter a cd command in your job file to go to the run path.
#  (qsub does not seem to have a flag to set the initial directory for the job)
#
command="cd ${rundir}"
echo -e "2i\n${command}\n.\nw\nq\n" | ed $jobfile >& /dev/null
numlinjob=`wc -l $jobfile | awk '{print $1}'`
numlinjob=`expr ${numlinjob} - 2`
command="echo LAUNCHER_WRF=\\\"$mpiexec -np \$(cat \$(cat \${ROOTDIR}/localdir|awk -F: '{print \$2}')/WRFV3/run/wrf_gms | awk -F: '{print \$2}') -machinefile wrf_gms \\\" >> \${ROOTDIR}/wrf.chunk"
echo -e "${numlinjob}i\n${command}\n.\nw\nq\n" | ed $jobfile >& /dev/null
command="echo LAUNCHER_WRF=\\\"$mpiexec -np \$(cat \$(cat \${ROOTDIR}/localdir|awk -F: '{print \$2}')/WRFV3/run/wrf_gms | awk -F: '{print \$2}') -machinefile wrf_gms \\\" >> wrf.chunk"
echo -e "${numlinjob}i\n${command}\n.\nw\nq\n" | ed $jobfile >& /dev/null
#command="export LAUNCHER_WRF=\"$mpiexec -np \$(cat \$(cat \${ROOTDIR}/localdir|awk -F: '{print \$2}')/WRFV3/run/wrf_gms | awk -F: '{print \$2}') -machinefile wrf_gms \""
#echo -e "${numlinjob}i\n${command}\n.\nw\nq\n" | ed $jobfile >& /dev/null
command="cat \$PE_HOSTFILE | awk '{print \$1\":\"\$2}' | grep \$HOSTNAME >& \$(cat \${ROOTDIR}/localdir|awk -F: '{print \$2}')/WRFV3/run/wrf_gms"
echo -e "${numlinjob}i\n${command}\n.\nw\nq\n" | ed $jobfile >& /dev/null
#
#   Pack the sandbox
#
tar czh --exclude ${jobfile} -f sandbox.tar.gz *
#
#  Copy the sandbox to the running directory
#
mkdir -p ${rundir} || exit
cp -L sandbox.tar.gz ${rundir}/
cp -L WRF4G_ini.sh   ${rundir}/

qsub -S /bin/bash -N "${WRF4G_REALIZATION}" -P l.meteo ${depflag} ${nodflag} ${eoflag} $jobfile | awk '{print $3}'
