#! /bin/bash
#
# Job submission abstraction layer
#
# These files (wrf4g_submit.*) are called with a 'jobfile' argument and an
# optional job identification to set up dependencies.  The only standard output
# should be a job identification for the job submitted (for its use on a
# subsequent call to this script)
#
jobfile=$1
depid=$2

source wrf4g.conf

cat << EOF > job.gw
EXECUTABLE = /bin/sh 
ARGUMENTS = "./${jobfile}"
INPUT_FILES   = sandbox.tar.gz, ${jobfile}
RANK = (CPU_MHZ * 2) + FREE_MEM_MB 
#MONITOR=/usr/local/gw/libexec/gw_monitor.sh
#REQUIREMENTS = HOSTNAME = "*.unican.es";
#REQUIREMENTS = HOSTNAME = "*.ciemat.es";
#REQUIREMENTS = HOSTNAME = "ce01.afroditi.hellasgrid.gr";
REQUIREMENTS = QUEUE_ACCESS = "*:esr:*"
#REQUIREMENTS = QUEUE_NAME = "hmem"
#ENVIRONMENT = X509_USER_PROXY=/oceano/gmeteo/users/valva/x509up_u15104

NAME = ${WRF4G_REALIZATION}
EOF

if test "${NUMBER_OF_NODES}" -gt 1 -o "${PROCESSES_PER_NODE}" -gt 1; then
  echo "LAUNCHER_METGRID=\"\""                 >> wrf.chunk
  echo "LAUNCHER_REAL=\"\""                    >> wrf.chunk
  echo "LAUNCHER_WRF=\"mpiexec \"" >> wrf.chunk
  echo "export P4_GLOBMEMSIZE=33554432" >> wrf.chunk
  total_cores=$((${NUMBER_OF_NODES} * ${PROCESSES_PER_NODE}))
  echo "NP = ${total_cores}" >> job.gw
else
  echo "LAUNCHER_METGRID=\"\""    >> wrf.chunk
  echo "LAUNCHER_REAL=\"\""       >> wrf.chunk
  echo "LAUNCHER_WRF=\"\""        >> wrf.chunk
fi

if test -n "${depid}"; then
  depflag="-d ${depid}"
else
  depflag=""
fi

#
#   Pack the sandbox
#
tar czh --exclude ${jobfile} -f sandbox.tar.gz *

gwsubmit -v ${depflag} -t job.gw | awk -F: '/JOB ID/ {print $2}'
